<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Volume Rendering on yt project blog</title><link>https://yt-project.github.io/blog/tags/volume-rendering/</link><description>Recent content in Volume Rendering on yt project blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 27 Sep 2011 12:20:56 +0000</lastBuildDate><atom:link href="https://yt-project.github.io/blog/tags/volume-rendering/index.xml" rel="self" type="application/rss+xml"/><item><title>New Screencasts</title><link>https://yt-project.github.io/blog/posts/post_32_new-screencasts/</link><pubDate>Tue, 27 Sep 2011 12:20:56 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_32_new-screencasts/</guid><description>A few of the yt developers have been experimenting with screencasts to show off new features or demonstrate how to do some things. Sam and I have both prepared screencasts on volume rendering and getting started with developing, respectively. Check them out below, and please feel free to leave comments and let us know what you think &amp;ndash; not just about the screencasts, but about what they demonstrate, and if you think any of the concepts or routines could be made easier.</description></item><item><title>Example HEALpix Contour Rendering Movie</title><link>https://yt-project.github.io/blog/posts/post_15_example-healpix-contour-rendering-movie/</link><pubDate>Mon, 21 Feb 2011 06:21:01 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_15_example-healpix-contour-rendering-movie/</guid><description>In response to Matt&amp;rsquo;s post &amp;lt;http://blog.enzotools.org/yt-development-healpix- and-contour-tree&amp;gt; on the HEALpix rendering update, I thought it would be worth posting an example movie. This shows the all-sky rendering of an observer moving from the front face of a simulation through the volume to the back face. The test simulation is 32 Mpc/h on a side with 64^3 root grid cells and up to 4 levels of refinement. At the start it looks like a disc because the entire simulation is in front of the camera and by the end it is all around the sides, indicating the simulation is behind the camera.</description></item><item><title>yt development - HEALpix and Contour Tree</title><link>https://yt-project.github.io/blog/posts/post_14_yt-development-healpix-and-contour-tree/</link><pubDate>Mon, 21 Feb 2011 04:14:53 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_14_yt-development-healpix-and-contour-tree/</guid><description>This week there was not very much yt development. However, a few notes may be of interest. SamS has updated the HEALPix camera to support ordered projections; what this means is that you can now make volume renderings using a standard color transfer function, or even the Planck transfer function, that cover 4pi of the sky. I am still working on integrating a method for creating images easily, but for now the scripts from last week should work.</description></item><item><title>Figuring Out Stereo Volume Rendering</title><link>https://yt-project.github.io/blog/posts/post_01_figuring-out-stereo-volume-rendering/</link><pubDate>Sat, 22 May 2010 09:13:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_01_figuring-out-stereo-volume-rendering/</guid><description>Last week I was approached by a friend and collaborator to prepare some large volume renderings using the software volume renderer in yt. In the past we&amp;rsquo;ve successfully made very, very large image renderings using yt &amp;ndash; Sam&amp;rsquo;s even made one at 8192^2, although at extremely high resolution like that sometimes the lack of fidelity in the underlying volume renderer shows up; sometimes even artifacts in the AMR grid boundaries, but that&amp;rsquo;s less common.</description></item></channel></rss>
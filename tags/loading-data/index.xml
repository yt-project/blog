<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Loading Data on yt project blog</title><link>https://yt-project.github.io/blog/tags/loading-data/</link><description>Recent content in Loading Data on yt project blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Sep 2022 09:00:00 -0600</lastBuildDate><atom:link href="https://yt-project.github.io/blog/tags/loading-data/index.xml" rel="self" type="application/rss+xml"/><item><title>New in 4.1: Loading data with functions</title><link>https://yt-project.github.io/blog/posts/new-in-41-loading-data-with-functions/</link><pubDate>Thu, 01 Sep 2022 09:00:00 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/new-in-41-loading-data-with-functions/</guid><description>There&amp;rsquo;s a new feature in yt 4.1 that lets you load data using just functions, without it needing to be in memory or to have its own frontend defined.
Back in the long, long distant past, the Stream frontend was created to make it easy to bring data into yt without writing a full-on &amp;ldquo;frontend.&amp;rdquo; Originally this was to make it easy to share data between VTK and yt &amp;ndash; and it worked!</description></item><item><title>New in 4.1: Loading data with functions</title><link>https://yt-project.github.io/blog/posts/new-in-41-loading-raw-hdf5-files/</link><pubDate>Thu, 01 Sep 2022 09:00:00 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/new-in-41-loading-raw-hdf5-files/</guid><description>Building on our ability to read data using just functions, we can now load data from raw HDF5 files with a minimum of metadata.
I&amp;rsquo;ve heard it said that HDF5 isn&amp;rsquo;t exactly a file-format. Sure, it describes how to write bits down (and does this extremely well and thoroughly), but I have always personally found it to be more immediately useful as a filesystem for data. And, it seems that people who write data to disk find it to be similarly useful &amp;ndash; but there&amp;rsquo;s no single way that people organize the data they use HDF5 to write to disk, attempts at metadata notwithstanding.</description></item></channel></rss>
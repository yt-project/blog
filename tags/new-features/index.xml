<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>new features on yt project blog</title><link>/tags/new-features/</link><description>Recent content in new features on yt project blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 30 Mar 2013 16:56:06 -0600</lastBuildDate><atom:link href="/tags/new-features/index.xml" rel="self" type="application/rss+xml"/><item><title>Obj File Exporter for Surfaces</title><link>/posts/objexporter/</link><pubDate>Sat, 30 Mar 2013 16:56:06 -0600</pubDate><guid>/posts/objexporter/</guid><description>&lt;p>How to export surfaces into an obj file (will it blend?!)&lt;/p></description></item><item><title>3D Surfaces and Sketchfab</title><link>/posts/sketchfab/</link><pubDate>Wed, 05 Dec 2012 13:37:36 -0600</pubDate><guid>/posts/sketchfab/</guid><description>&lt;p>Let&amp;rsquo;s talk about exporting surfaces to sketchfab with yt!&lt;/p></description></item><item><title>The Rockstar Halo Finder in yt</title><link>/posts/rockstar/</link><pubDate>Mon, 26 Nov 2012 20:22:16 -0600</pubDate><guid>/posts/rockstar/</guid><description>Over the last few weeks, Matt Turk, Christopher Moody, and Stephen Skory have been working to improve the integration of the Rockstar halo finder in yt. Rockstar was written primarily by Peter Behroozi and has a main website here. Linked there is the source and the most current edition of the method paper which includes a timing and scaling study.
Rockstar is a six dimensional halo finder, meaning that it considers both particle position and momentum when locating dark matter halos.</description></item><item><title>Simple Grid Refinement</title><link>/posts/simple_grid_refinement/</link><pubDate>Tue, 30 Oct 2012 22:16:54 -0600</pubDate><guid>/posts/simple_grid_refinement/</guid><description>Notebook Download
Grid refinement In yt, you can now generate very simple initial conditions:
In[1]:
from yt.mods import * from yt.frontends.stream.api import load_uniform_grid from yt.frontends.gdf.api import * from yt.utilities.grid_data_format.writer import write_to_gdf class DataModifier(object): pass class TophatSphere(DataModifier): def __init__(self, fields, radius, center): self.fields = fields self.radius = radius self.center = center def apply(self, grid, container): r = ((grid[&amp;#39;x&amp;#39;] - self.center[0])**2.0 + (grid[&amp;#39;y&amp;#39;] - self.center[1])**2.0 + (grid[&amp;#39;z&amp;#39;] - self.center[2])**2.0)**0.5 for field in self.</description></item><item><title>yt 2.4 released!</title><link>/posts/post_43_yt-2-4-released/</link><pubDate>Fri, 03 Aug 2012 02:43:40 +0000</pubDate><guid>/posts/post_43_yt-2-4-released/</guid><description>We’re proud to announce the release of version 2.4 of the yt Project, http://yt-project.org/ . The new version includes many new features, refinements of existing features and numerous bugfixes. We encourage all users to upgrade to take advantage of the changes.
yt is a community-developed analysis and visualization toolkit, primarily directed at astrophysical hydrodynamics simulations. It provides full support for output from the Enzo, FLASH, Orion, and Nyx codes, with preliminary support for several others.</description></item><item><title>yt Version 2.3 Announcement</title><link>/posts/post_38_yt-version-2-3-announcement/</link><pubDate>Thu, 15 Dec 2011 10:44:00 +0000</pubDate><guid>/posts/post_38_yt-version-2-3-announcement/</guid><description>Just in time for the New Year, we’re happy to announce the release of yt version 2.3! ( http://yt-project.org/ ) The new version includes many new modules and enhancements, and the usual set of bug fixes over the last point release. We encourage all users to upgrade to take advantage of the changes.
yt is a community-developed analysis and visualization toolkit for astrophysical simulation data. yt provides full support for Enzo, Orion, Nyx, and FLASH codes, with preliminary support for the RAMSES code (and a handful of others.</description></item><item><title>Boolean Data Containers</title><link>/posts/post_36_boolean-data-containers/</link><pubDate>Wed, 09 Nov 2011 07:03:00 +0000</pubDate><guid>/posts/post_36_boolean-data-containers/</guid><description>A useful new addition to yt are boolean data containers. These are hybrid data containers that are built by relating already-defined data containers with each other using boolean operators. Nested boolean logic, using parentheses, is also supported. The boolean data container (or volume) is made by constructing a list of volumes interspersed with operators given as strings. Below are some examples of what can be done with boolean data containers.</description></item><item><title>Dataset Tracking with yt</title><link>/posts/post_31_dataset-tracking-with-yt/</link><pubDate>Mon, 12 Sep 2011 10:53:00 +0000</pubDate><guid>/posts/post_31_dataset-tracking-with-yt/</guid><description>In this post I&amp;rsquo;d like to discuss a bit of work in progress to highlight some exciting new features that we hope to have working in yt sometime soon.
On any machine that runs yt, there is a file created in the users home directory named ~/.yt/parameter_files.csv that yt uses internally to keep track of datasets it has seen. This is just a simple text file containing comma-separated entries with a few pieces of information about datasets, like their location on disk and the last date and time they were &amp;lsquo;seen&amp;rsquo; by yt.</description></item><item><title>ParaView and yt</title><link>/posts/post_23_paraview-and-yt/</link><pubDate>Mon, 13 Jun 2011 20:09:34 +0000</pubDate><guid>/posts/post_23_paraview-and-yt/</guid><description>Thanks to some awesome work by developers at Kitware, yt can now be called from within ParaView!
This relies on a couple things, all of which are pretty exciting moving forward. The idea behind this is to leverage where the two codes have their own strengths and weaknesses, and identify places where they can work productively together. For instance, yt has been designed to provide astrophysical analysis; in this way, it can generate adaptive projections, spectral energy distributions and so on.</description></item><item><title>yt 2.1 Release Announcement</title><link>/posts/post_19_yt-2-1-release-announcement/</link><pubDate>Fri, 08 Apr 2011 04:57:00 +0000</pubDate><guid>/posts/post_19_yt-2-1-release-announcement/</guid><description>We are proud to announce the release of yt version 2.1. This release includes several new features, bug fixes, and numerous improvements to the code base and documentation. At the yt homepage, http://yt.enzotools.org/ , an installation script, a cookbook, documentation and a guide to getting involved can be found.
yt is an analysis and visualization toolkit for Adaptive Mesh Refinement data. yt provides full support for Enzo, Orion, and FLASH codes, with preliminary support for RAMSES, ART, Chombo, CASTRO and MAESTRO codes.</description></item></channel></rss>
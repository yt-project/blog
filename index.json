[{"categories":["meta","contributing"],"description":"\u003cp\u003eDo you have:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA new feature that you think is interesting?\u003c/li\u003e\n\u003cli\u003eA way that you use yt that you think others would like?\u003c/li\u003e\n\u003cli\u003eA tutorial on how to replicate your analysis?\u003c/li\u003e\n\u003cli\u003eA neat application for yt?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eConsider contributing to the blog! Here\u0026rsquo;s how to do it!\u003c/p\u003e","tags":["blog"],"title":"Contributing to the yt Blog!","url":"https://yt-project.github.io/yt-blog/posts/contributing/"},{"categories":["Development"],"description":"\u003cp\u003eAn update and proposal on continuing development of Dask and yt.\u003c/p\u003e","tags":["New Feature"],"title":"Dask and yt: a pre-YTEP","url":"https://yt-project.github.io/yt-blog/posts/dask_yt_pytep/"},{"categories":["Tutorial"],"description":"\u003cp\u003eInteractive visualization of \u003cem\u003eyt\u003c/em\u003e data using \u003cem\u003enapari\u003c/em\u003e?\u003c/p\u003e","tags":["Experimental"],"title":"A yt-napari party","url":"https://yt-project.github.io/yt-blog/posts/ytnapariparty/"},{"categories":["archive","tutorial"],"description":"\u003cp\u003eHow to visualize a line integral convolution for a vector field with yt\u003c/p\u003e","tags":["archive","annotations","SlicePlot"],"title":"Line Integral Convolution for Vector Field Visualization","url":"https://yt-project.github.io/yt-blog/posts/line-integral/"},{"categories":["archive","development"],"description":"\u003cp\u003eA new post about our project\u0026rsquo;s governance!\u003c/p\u003e","tags":["archive","community"],"title":"Much Ado About Governance","url":"https://yt-project.github.io/yt-blog/posts/governance/"},{"categories":["archive","development"],"description":"\u003cp\u003eOur reasoning for switching licenses for the yt-project\u003c/p\u003e","tags":["archive","community"],"title":"Relicensing yt from GPLv3 to BSD","url":"https://yt-project.github.io/yt-blog/posts/relicensing/"},{"categories":["archive","tutorial"],"description":"\u003cp\u003eHow to export surfaces into an obj file (will it blend?!)\u003c/p\u003e","tags":["archive","new features","surfaces"],"title":"Obj File Exporter for Surfaces","url":"https://yt-project.github.io/yt-blog/posts/objexporter/"},{"categories":["archive","development"],"description":"\u003cp\u003eOn March 6-8, 2013 we held a yt development workshop at UCSC. Let\u0026rsquo;s talk about\nit!\u003c/p\u003e","tags":["archive","community"],"title":"The first yt development workshop!","url":"https://yt-project.github.io/yt-blog/posts/devworkshop2013/"},{"categories":["archive","development"],"description":"\u003cp\u003eAnnouncing yt 2.5!\u003c/p\u003e","tags":["archive","releases","yt 2.x"],"title":"yt 2.5 released!","url":"https://yt-project.github.io/yt-blog/posts/yt-25/"},{"categories":["archive","development"],"description":"\u003cp\u003eAnnouncing the 2013 yt developer workshop!\u003c/p\u003e","tags":["archive","community"],"title":"Announcing the 2013 yt development workshop","url":"https://yt-project.github.io/yt-blog/posts/devworkshopannounce2013/"},{"categories":["archive","tutorial"],"description":"\u003cp\u003eThis post shows how to generate particle fields from pre-defined particle\nlists, lattice distributions, and distributions based on density fields.\u003c/p\u003e","tags":["archive","particles","annotations"],"title":"Particle Generators","url":"https://yt-project.github.io/yt-blog/posts/particle-gen/"},{"categories":["archive","development"],"description":"\u003cp\u003eWhat was 2012 like for the yt community? Let\u0026rsquo;s look back together!\u003c/p\u003e","tags":["archive"],"title":"2012 In Review","url":"https://yt-project.github.io/yt-blog/posts/2012-review/"},{"categories":["archive","tutorial"],"description":"\u003cp\u003eLet\u0026rsquo;s talk about exporting surfaces to sketchfab with yt!\u003c/p\u003e","tags":["archive","new features","surfaces"],"title":"3D Surfaces and Sketchfab","url":"https://yt-project.github.io/yt-blog/posts/sketchfab/"},{"categories":["archive","tutorial"],"description":"Over the last few weeks, Matt Turk, Christopher Moody, and Stephen Skory have been working to improve the integration of the Rockstar halo finder in yt. Rockstar was written primarily by Peter Behroozi and has a main website here. Linked there is the source and the most current edition of the method paper which includes a timing and scaling study.\nRockstar is a six dimensional halo finder, meaning that it considers both particle position and momentum when locating dark matter halos.","tags":["archive","new features"],"title":"The Rockstar Halo Finder in yt","url":"https://yt-project.github.io/yt-blog/posts/rockstar/"},{"categories":["archive","development"],"description":"This is a long blog post! The short of it is:\n If you\u0026rsquo;re using Enzo or FLASH, you can probably do most of what you want to do with 3.0. But there are probably bugs, and you can\u0026rsquo;t volume render yet. But every bug or missing feature you find is a useful piece of information that can help speed up development. If you\u0026rsquo;re using RAMSES, 3.0 will be a vast improvement!","tags":["archive","yt-3.x"],"title":"What's up with yt 3.0?","url":"https://yt-project.github.io/yt-blog/posts/whats_up_with_30/"},{"categories":["meta","archive"],"description":"\u003cp\u003eWe\u0026rsquo;ve got a new blog! Here\u0026rsquo;s a post that talks about the changes we\u0026rsquo;ve made and\nhow we expect to move forward!\u003c/p\u003e","tags":["blog","archive"],"title":"Our New Blog","url":"https://yt-project.github.io/yt-blog/posts/fork_blogging/"},{"categories":["archive","tutorial"],"description":"Notebook Download\nGrid refinement In yt, you can now generate very simple initial conditions:\nIn[1]:\nfrom yt.mods import * from yt.frontends.stream.api import load_uniform_grid from yt.frontends.gdf.api import * from yt.utilities.grid_data_format.writer import write_to_gdf class DataModifier(object): pass class TophatSphere(DataModifier): def __init__(self, fields, radius, center): self.fields = fields self.radius = radius self.center = center def apply(self, grid, container): r = ((grid[\u0026#39;x\u0026#39;] - self.center[0])**2.0 + (grid[\u0026#39;y\u0026#39;] - self.center[1])**2.0 + (grid[\u0026#39;z\u0026#39;] - self.center[2])**2.0)**0.5 for field in self.","tags":["archive","new features"],"title":"Simple Grid Refinement","url":"https://yt-project.github.io/yt-blog/posts/simple_grid_refinement/"},{"categories":["archive","development"],"description":"Weâ€™re proud to announce the release of version 2.4 of the yt Project, http://yt-project.org/ . The new version includes many new features, refinements of existing features and numerous bugfixes. We encourage all users to upgrade to take advantage of the changes.\nyt is a community-developed analysis and visualization toolkit, primarily directed at astrophysical hydrodynamics simulations. It provides full support for output from the Enzo, FLASH, Orion, and Nyx codes, with preliminary support for several others.","tags":["archive","yt 2.x","releases","new features"],"title":"yt 2.4 released!","url":"https://yt-project.github.io/yt-blog/posts/post_43_yt-2-4-released/"},{"categories":["archive"],"description":"Tomorrow we\u0026rsquo;re going to try something new \u0026ndash; Google Hangouts! If you\u0026rsquo;d like help with something, to share some feedback, or just to say hi to other community members, stop by Tuesday, May 1st. We\u0026rsquo;ll be starting up around 2PM Eastern and continuing for a couple hours.\nIf this works out, we\u0026rsquo;ll try it again from time to time, to catch up on new developments, help out with scripts or visualization issues, soliciting feedback, and to chat about using and developing yt.","tags":["archive","community"],"title":"yt Google+ Hangout tomorrow!","url":"https://yt-project.github.io/yt-blog/posts/post_42_yt-google-hangout-tomorrow/"},{"categories":["archive","development"],"description":"Now that the post-workshop preparations and work have settled down, I thought it might be interesting to share some of the developments going on with yt. We\u0026rsquo;re still a long way from a new release, so these interim \u0026lsquo;development\u0026rsquo; updates are meant to be a bit of a teaser. As always, these features are either in the main branch or (if noted) in a public fork on BitBucket. If they sound interesting, drop us a line on `yt-dev \u0026lt;http://lists.","tags":["archive","community"],"title":"What's new with yt?","url":"https://yt-project.github.io/yt-blog/posts/post_41_what-s-new-with-yt/"},{"categories":["archive","meta"],"description":"The yt workshop last week in Chicago ( http://yt-project.org/workshop2012/ ) was an enormous success. On behalf of the organizing and technical committees, I\u0026rsquo;d like to specifically thank the FLASH Center, particularly Don Lamb, Mila Kuntu, Carrie Eder, for their hospitality; the venue was outstanding and their hospitality touching. Additionally, we\u0026rsquo;re very grateful to the Adler Planetarium\u0026rsquo;s Doug Roberts and Mark SubbaRao for hosting us on Wednesday evening \u0026ndash; seeing the planetarium show as well as volume renderings made by yt users up on the dome was so much fun.","tags":["archive","community"],"title":"yt workshop 2012 - a success!","url":"https://yt-project.github.io/yt-blog/posts/post_40_yt-workshop-2012-a-success/"},{"categories":["archive"],"description":"The first yt workshop is in just about a week. We\u0026rsquo;ve updated the website with the current list of talks, along with information about getting to and from the workshop from the conference hotel, and information about how to get the sample data. Keep your eyes on the website in the lead up to the workshop, as we\u0026rsquo;ll be posting a script for fisheye lens renderings for our viz night at the Adler, information about the talks and example scripts, and other useful info.","tags":["archive","community"],"title":"Workshop in just a week!","url":"https://yt-project.github.io/yt-blog/posts/post_39_workshop-in-just-a-week/"},{"categories":["archive","development"],"description":"Just in time for the New Year, weâ€™re happy to announce the release of yt version 2.3! ( http://yt-project.org/ ) The new version includes many new modules and enhancements, and the usual set of bug fixes over the last point release. We encourage all users to upgrade to take advantage of the changes.\nyt is a community-developed analysis and visualization toolkit for astrophysical simulation data. yt provides full support for Enzo, Orion, Nyx, and FLASH codes, with preliminary support for the RAMSES code (and a handful of others.","tags":["archive","yt 2.x","releases","new features"],"title":"yt Version 2.3 Announcement","url":"https://yt-project.github.io/yt-blog/posts/post_38_yt-version-2-3-announcement/"},{"categories":["archive"],"description":"Registration for the 2012 yt workshop, to be held at the FLASH center in Chicago from January 24-26, is now open.\nPlease register here: http://yt- project.org/workshop2012/","tags":["archive","community"],"title":"yt workshop registration is open!","url":"https://yt-project.github.io/yt-blog/posts/post_37_yt-workshop-registration-is-open/"},{"categories":["archive","tutorial"],"description":"A useful new addition to yt are boolean data containers. These are hybrid data containers that are built by relating already-defined data containers with each other using boolean operators. Nested boolean logic, using parentheses, is also supported. The boolean data container (or volume) is made by constructing a list of volumes interspersed with operators given as strings. Below are some examples of what can be done with boolean data containers.","tags":["archive","new features"],"title":"Boolean Data Containers","url":"https://yt-project.github.io/yt-blog/posts/post_36_boolean-data-containers/"},{"categories":["archive","meta"],"description":"yt now has a Google Plus page. Here\u0026rsquo;s we\u0026rsquo;ll post smaller, less blog-worthy items, hold video conferencing \u0026lsquo;hangouts\u0026rsquo;, and so on. Encircle away! And if you post something you\u0026rsquo;d like to be reshared, just be sure to explicitly share it with \u0026lsquo;+yt\u0026rsquo; so we know.","tags":["archive","community"],"title":"Google+ Page for yt","url":"https://yt-project.github.io/yt-blog/posts/post_35_google-page-for-yt/"},{"categories":["archive","development"],"description":"A few of us worked this past week on a couple yt projects and made what we think is significant progress. Two of the items we focused on were testing and parallelism.\nFor testing, we\u0026rsquo;ve broadened the test suite to include many more functions and derived quantities. We now have 548 tests that include (off and on-axis) slices, (off and on- axis) projections, phase distributions, halo finding, volume rendering, and geometrical region cuts such as rectangular solids, spheres, and disks.","tags":["archive","yt core"],"title":"yt Testing and Parallelism","url":"https://yt-project.github.io/yt-blog/posts/post_34_yt-testing-parallelism/"},{"categories":["archive","meta"],"description":"I\u0026rsquo;m pleased to announce the 2012 yt Workshop at the FLASH Center in Chicago, January 24-26.\nThe workshop will be aimed at both users and developers of yt. We will begin with intensive user training, moving from basic usage to advanced and parallel usage. Users are encouraged to bring their ideas and prototypes for new analysis routines as there will be opportunities to work with more experienced developers. We will then address to how to modify, extend and contribute to yt, and transition to a developers workshop.","tags":["archive","community"],"title":"Announcing the 2012 yt Workshop","url":"https://yt-project.github.io/yt-blog/posts/post_33_announcing-the-2012-yt-workshop/"},{"categories":["archive","development","tutorial"],"description":"A few of the yt developers have been experimenting with screencasts to show off new features or demonstrate how to do some things. Sam and I have both prepared screencasts on volume rendering and getting started with developing, respectively. Check them out below, and please feel free to leave comments and let us know what you think \u0026ndash; not just about the screencasts, but about what they demonstrate, and if you think any of the concepts or routines could be made easier.","tags":["archive","volume rendering","community"],"title":"New Screencasts","url":"https://yt-project.github.io/yt-blog/posts/post_32_new-screencasts/"},{"categories":["archive","development"],"description":"In this post I\u0026rsquo;d like to discuss a bit of work in progress to highlight some exciting new features that we hope to have working in yt sometime soon.\nOn any machine that runs yt, there is a file created in the users home directory named ~/.yt/parameter_files.csv that yt uses internally to keep track of datasets it has seen. This is just a simple text file containing comma-separated entries with a few pieces of information about datasets, like their location on disk and the last date and time they were \u0026lsquo;seen\u0026rsquo; by yt.","tags":["archive","new features"],"title":"Dataset Tracking with yt","url":"https://yt-project.github.io/yt-blog/posts/post_31_dataset-tracking-with-yt/"},{"categories":["archive","development"],"description":"This last week, following the release of version 2.2 of yt, I spent a bit of time looking at speed improvements. There were several places that the code was unacceptably slow:\n  1D profiles (as noted in our method paper, even) Ghost-zone generation RAMSES grid data loading   The first of these was relatively easy to fix. In the past, 1D profiles (unlike 2D profiles) were calculated using pure-python mechanisms; numpy was used for digitization, then inverse binning was conducted by the numpy \u0026lsquo;where\u0026rsquo; command, and these binnings were used to generate the overall histogram.","tags":["archive","yt core"],"title":"Optimizing yt","url":"https://yt-project.github.io/yt-blog/posts/post_30_optimizing-yt/"},{"categories":["archive"],"description":"(Please feel encouraged to forward this message to any other interested parties.)\nWe are proud to announce the release of yt version 2.2. This release includes several new features, bug fixes, and numerous improvements to the code base and documentation. At the new yt homepage, http://yt-project.org/ , an installation script, a cookbook, documentation and a guide to getting involved can be found. We are particularly proud of the new GUI, entitled \u0026ldquo;Reason,\u0026rdquo; which allows real-time exploration of datasets, and which can be used (locally or remotely over SSH) with no dependencies other than a web browser.","tags":["archive","releases","yt 2.x"],"title":"yt-2.2 Release Announcement","url":"https://yt-project.github.io/yt-blog/posts/post_29_yt-2-2-release-announcement/"},{"categories":["archive"],"description":"In keeping with the project rename we\u0026rsquo;ve moved this blog from it\u0026rsquo;s old home at blog.enzotools.org to its new home at blog.yt-project.org. But, we\u0026rsquo;ve put in a few redirects, and the RSS feed hasn\u0026rsquo;t moved, so you shouldn\u0026rsquo;t need to do anything different to get here. We\u0026rsquo;ve also enabled anonymous commenting, so feel free to comment below. (But, of course, letting us know who you are would certainly help with keeping in touch!","tags":["archive","blog","community"],"title":"This blog has moved -- but you don't have to!","url":"https://yt-project.github.io/yt-blog/posts/post_28_this-blog-has-moved-but-you-don-t-have-to/"},{"categories":["archive"],"description":"I am very excited to announce the yt Hub: http://hub.yt-project.org/.\nThe yt Hub is a gathering place for all things related to running, analyzing, and presenting astrophysical simulations. Once upon a time, we had the Enzotools Barn, which was a place to share Enzo scripts unrelated to yt, including hosting of those scripts. The Barn was a minor success, but had a very limited scope and a somewhat clunky user experience.","tags":["archive","data"],"title":"Introducing the yt Hub","url":"https://yt-project.github.io/yt-blog/posts/post_27_introducing-the-yt-hub/"},{"categories":["archive","meta"],"description":"This is just a brief blog entry \u0026ndash; other news is on the way soon! \u0026ndash; to let everyone know we\u0026rsquo;ve updated our domains. In keeping with the change in focus of the yt project, expanding to work with multiple codes and take broader views of analysis and visualization, we have moved from enzotools.org to yt-project.org. Some other exciting changes will be coming from this in the future, too!\nFor more info, see the mailing list announcement.","tags":["archive","community"],"title":"We're now the yt Project!","url":"https://yt-project.github.io/yt-blog/posts/post_26_we-re-now-the-yt-project/"},{"categories":["archive"],"description":"Jorge posted this video of using yt inside ParaView. It demonstrated multi-res slices, projections, and even volume rendering with an adjustable transfer function. I think it\u0026rsquo;s pretty incredible. Thanks very much to Jorge and Kitware for their hard work, and it\u0026rsquo;ll be exciting to see where it goes from here!\n  ","tags":["archive"],"title":"A movie of yt in paraview","url":"https://yt-project.github.io/yt-blog/posts/post_25_a-movie-of-yt-in-paraview/"},{"categories":["archive","meta"],"description":"In case you haven\u0026rsquo;t visited our front page lately, the yt homepage has been redesigned! The old homepage was nice and functional, but it tried to cram too much into too small a place. The new homepage focuses on the three main questions people have when they go to the yt page: \u0026lsquo;How do I get it?', \u0026lsquo;How do I use it?', and \u0026lsquo;How do I participate?\u0026rsquo;\nThe new page is focused on some concrete examples, some quantitative analysis, and features a heavy dosage of the yt community \u0026ndash; in fact, the redesign came about through a conversation in IRC, where a few of the core developers were speculating about how best to convey how to participate and how strong a community yt has.","tags":["archive","community"],"title":"A mission statement and a new homepage!","url":"https://yt-project.github.io/yt-blog/posts/post_24_a-mission-statement-and-a-new-homepage/"},{"categories":["archive","development"],"description":"Thanks to some awesome work by developers at Kitware, yt can now be called from within ParaView!\nThis relies on a couple things, all of which are pretty exciting moving forward. The idea behind this is to leverage where the two codes have their own strengths and weaknesses, and identify places where they can work productively together. For instance, yt has been designed to provide astrophysical analysis; in this way, it can generate adaptive projections, spectral energy distributions and so on.","tags":["archive","new features"],"title":"ParaView and yt","url":"https://yt-project.github.io/yt-blog/posts/post_23_paraview-and-yt/"},{"categories":["archive"],"description":"A couple of us have been working on a comprehensive notebook web GUI for yt. It\u0026rsquo;s not ready yet.\nBUT! In advance of that, we\u0026rsquo;ve rolled a portion of that into something called the \u0026lsquo;mapserver\u0026rsquo; into the development branch. This is a small, standalone webapp that implements a rendered-on-the-fly google maps interface in yt. To run it, just go into a directory that has some data, and run:\nyt mapserver DD0054/DD0054 (where \u0026lsquo;DD0054/DD0054\u0026rsquo; is the same thing you\u0026rsquo;d feed to \u0026lsquo;load\u0026rsquo; in a script.","tags":["archive","fun"],"title":"Gmaps-ify your data!","url":"https://yt-project.github.io/yt-blog/posts/post_22_gmaps-ify-your-data/"},{"categories":["archive","development"],"description":"It\u0026rsquo;s been a while since the last Development post â€” but in that time, some pretty fun things have been going on. These are some of the smaller things, but there are bigger things in store which I\u0026rsquo;ll write about next time.\nQuadTree Projections For a while, there has been the option to use a QuadTree data structure to conduct projections through a simulation volume. This was accessible through the quad_proj attribute, which respected the same interface as the normal proj interface.","tags":["archive","community","yt-core"],"title":"yt development - Quad trees, Tickets and more","url":"https://yt-project.github.io/yt-blog/posts/post_21_yt-development-quad-trees-tickets-and-more/"},{"categories":["archive"],"description":"yt is in need of an awesome new logo, which is why we are announcing the first ever new logo contest! So here\u0026rsquo;s the deal:\nWe\u0026rsquo;ll accept entries for the next two weeks. Let\u0026rsquo;s arbitrarily say Tuesday, May 10th, at 11:59:59 pm EST. If there is more than one entry, we will put it up for a community vote at that time.\nOh, and the most important part \u0026ndash; the winner will get a coffee mug with their new logo front and center!","tags":["archive","community","fun"],"title":"yt Logo Contest, and possibly a free mug!","url":"https://yt-project.github.io/yt-blog/posts/post_20_yt-logo-contest-and-possibly-a-free-mug/"},{"categories":["archive","development"],"description":"We are proud to announce the release of yt version 2.1. This release includes several new features, bug fixes, and numerous improvements to the code base and documentation. At the yt homepage, http://yt.enzotools.org/ , an installation script, a cookbook, documentation and a guide to getting involved can be found.\nyt is an analysis and visualization toolkit for Adaptive Mesh Refinement data. yt provides full support for Enzo, Orion, and FLASH codes, with preliminary support for RAMSES, ART, Chombo, CASTRO and MAESTRO codes.","tags":["archive","yt 2.x","releases","new features"],"title":"yt 2.1 Release Announcement","url":"https://yt-project.github.io/yt-blog/posts/post_19_yt-2-1-release-announcement/"},{"categories":["archive","development"],"description":"It\u0026rsquo;s been nearly a month since the last yt development post; in that time, there\u0026rsquo;s been quite a bit of development in a couple different areas. This is culminating in a 2.1 release, for which Sam Skillman is release manager, sometime in the next few days.\nStreamlines and Treecode SamS has spent some time over the last month developing two types of streamline code. The first integrates a series of streamlines over a selection of the domain, which can then be visualizing using the mplot3d package.","tags":["archive","yt 2.x","community","streamlines"],"title":"yt development - Treecodes, GUIs, IRC and more!","url":"https://yt-project.github.io/yt-blog/posts/post_18_yt-development-treecodes-guis-irc-and-more/"},{"categories":["archive","development"],"description":"This last week was the first full week on BitBucket and so far I think it has been quite successful. The new development process is for most of the core developers to maintain personal forks for experimental changes, or longer term changes, and then to commit directly or merge when bug fixes or features are ready to be integrated. The list of forks is easily visible and each individual fork\u0026rsquo;s divergence from the primary repository can be viewed by clicking on the green arrows.","tags":["archive","community"],"title":"yt development - External Analysis and Simulation Code Support","url":"https://yt-project.github.io/yt-blog/posts/post_17_yt-development-external-analysis-and-simulation-code-support/"},{"categories":["archive","development"],"description":"The major changes this week came mostly in the form of administrative shifts. However, SamS did some great work I\u0026rsquo;m going to hint at (he\u0026rsquo;ll post a blog entry later) and I started laying the ground work for something I\u0026rsquo;ve been excited about for a while, an MPI-aware task queue.\nBitBucket For the last couple months, yt has been struggling under the constraints of the hg server on its hosting plan.","tags":["archive","community","streamlines","yt core"],"title":"yt development - BitBucket, Task Queues, and Streamlines","url":"https://yt-project.github.io/yt-blog/posts/post_16_yt-development-bitbucket-task-queues-and-streamlines/"},{"categories":["archive"],"description":"In response to Matt\u0026rsquo;s post \u0026lt;http://blog.enzotools.org/yt-development-healpix- and-contour-tree\u0026gt; on the HEALpix rendering update, I thought it would be worth posting an example movie. This shows the all-sky rendering of an observer moving from the front face of a simulation through the volume to the back face. The test simulation is 32 Mpc/h on a side with 64^3 root grid cells and up to 4 levels of refinement. At the start it looks like a disc because the entire simulation is in front of the camera and by the end it is all around the sides, indicating the simulation is behind the camera.","tags":["archive","volume rendering"],"title":"Example HEALpix Contour Rendering Movie","url":"https://yt-project.github.io/yt-blog/posts/post_15_example-healpix-contour-rendering-movie/"},{"categories":["archive","development"],"description":"This week there was not very much yt development. However, a few notes may be of interest. SamS has updated the HEALPix camera to support ordered projections; what this means is that you can now make volume renderings using a standard color transfer function, or even the Planck transfer function, that cover 4pi of the sky. I am still working on integrating a method for creating images easily, but for now the scripts from last week should work.","tags":["archive","volume rendering"],"title":"yt development - HEALpix and Contour Tree","url":"https://yt-project.github.io/yt-blog/posts/post_14_yt-development-healpix-and-contour-tree/"},{"categories":["archive","development"],"description":"This week I added the ability to calculate all-sky column densities. This functionality uses HEALpix to calculate equally-area regions on the sky and then shoots out rays from a central source to some fixed radius, accumulating values of a field along the way. Although so far I\u0026rsquo;ve only used it to calculate column densities of \u0026ldquo;Density\u0026rdquo; it could be used for other values as well, including all- sky weighted averages of quantities.","tags":["archive","transforms/projections"],"title":"yt development - All-sky column density calculation","url":"https://yt-project.github.io/yt-blog/posts/post_13_yt-development-all-sky-column-density-calculation/"},{"categories":["archive","development"],"description":"As a result of progress in my scientific goals, and the application of recent yt developments to them, I did not make many changes or developments in yt this week. When I did work on yt, I primarily spent time re-organizing the documentation and fixing several errors. I have added an \u0026ldquo;installation\u0026rdquo; section, consolidated a few sections, and wrote two new sections on how to make plots and on how to generate derived data products.","tags":["archive","documentation","community"],"title":"yt development - Documentation","url":"https://yt-project.github.io/yt-blog/posts/post_12_yt-development-documentation/"},{"categories":["archive","development"],"description":"Not much yt development went on in the last week; I spent some time working with Enzo and driving forward simulation goals, which resulted in some development that directly benefited those simulation goals. However, this fortuitously coincided with work I have been eager to return to for quite some time: namely, time series analysis!\nTime Series Analysis The problem with time series analysis in yt has, to this point, been an issue of verbosity and clunkiness.","tags":["archive","yt core","time series"],"title":"yt development - Time series, and more","url":"https://yt-project.github.io/yt-blog/posts/post_11_yt-development-time-series-and-more/"},{"categories":["archive","development"],"description":"This is the second blog entry in the weekly series, with some updates on what took place last week with respect to yt development. One of the more exciting things is the final one, which is the start of what I want to focus on for the next couple months or years: integration of physics modules with analysis code, and then the ultimate inversion of that relationship.\nyt-2.0 This week saw the release of yt 2.","tags":["archive","yt 2.x","yt core"],"title":"yt development - 2.0, Cython, and physics module wrapping","url":"https://yt-project.github.io/yt-blog/posts/post_10_yt-development-2-0-cython-and-physics-module-wrapping/"},{"categories":["archive","development"],"description":"This is the first of a new series of \u0026ldquo;what\u0026rsquo;s up with yt\u0026rdquo; blog posts I\u0026rsquo;m going to be writing. By keeping this log, I hope that maybe some things that would otherwise get lost in the version control changesets will get brought to greater light. This covers the time period of the first couple weeks in January.\nStar Particle Rendering On the mailing list, the question of adding star particles to a volume rendering was raised.","tags":["archive","community","yt core","frontends Maestro"],"title":"yt development - star particle rendering, simple merger trees and documentation","url":"https://yt-project.github.io/yt-blog/posts/post_09_yt-development-star-particle-rendering-simple-merger-trees-and-documentation/"},{"categories":["archive"],"description":"After a significant amount of development and restructuring, I have added the AMR kd-Tree rendering framework to yt. There are several posts on this blog about this module already, so I won\u0026rsquo;t go over all the background information again. Here I\u0026rsquo;d like to showcase some of the recent successes and capabilities of the volume rendering within yt.\nNew optimization options:There are a few important additions that have made it possible to render some of the largest AMR simulations we have available.","tags":["archive","yt core"],"title":"AMR kd-Tree rendering added to yt","url":"https://yt-project.github.io/yt-blog/posts/post_08_amr-kd-tree-rendering-added-to-yt/"},{"categories":["archive"],"description":"Enzo 2.0 has just been released to its new Google Code website. This release features preliminary support for inline Python analysis, using yt.\nIn the Enzo documentation there\u0026rsquo;s a brief section on how to use yt for inline analysis. As it stands, many features are not fully functional, but things like phase plots, profiles, derived quantities and slices all work. This functionality is currently untested at large (\u0026gt; 128) processors, but for small runs \u0026ndash; particularly debugging runs!","tags":["archive","frontends Enzo"],"title":"Enzo 2.0 and Inline yt","url":"https://yt-project.github.io/yt-blog/posts/post_07_enzo-2-0-and-inline-yt/"},{"categories":["archive"],"description":"Hi all,\nJust sharing a video here that showcases some improvements I\u0026rsquo;ve made to the kD-tree rendering that will be making its way to yt for the 2.0 release. You can download it render_movie.3gp|here\nJust to be clear this is showing the rendering of a cosmology simulation with a 64^3 root grid + 6 AMR levels in real time on 8 processors. The script is run in parallel, with the root processor displaying the results once each frame is finished.","tags":["archive","yt-core"],"title":"kD-Tree Rendering Improvements","url":"https://yt-project.github.io/yt-blog/posts/post_06_kd-tree-rendering-improvements/"},{"categories":["archive"],"description":"The last few days I\u0026rsquo;ve spent some time looking at how parallelism in yt performs. I conducted two different tests, both of which operated on the 512^3, 7 level \u0026lsquo;Santa Fe Light Cone\u0026rsquo; dataset RD0036. This dataset has 5.5e8 total cells and in the neighborhood of 380,000 grids. I ran four different tests: a 1D profile of the entire dataset, a 2D profile of the entire dataset, and projections of both \u0026lsquo;Density\u0026rsquo; (requires IO) and \u0026lsquo;Ones\u0026rsquo; (doesn\u0026rsquo;t require IO).","tags":["archive"],"title":"Improvements to Parallelism","url":"https://yt-project.github.io/yt-blog/posts/post_05_improvements-to-parallelism/"},{"categories":["archive"],"description":"The current method for projections in yt is based on a home-grown algorithm for calculating grid overlap and joining points. I\u0026rsquo;ve always been pretty proud of it \u0026ndash; it gave good results, and it succeeded at the project-once-make-many-images philosophy that went into its design. Rather than storing a 2D array of pixels, projections and slices in yt store flat arrays of image plane coordinates and cell widths. This means that there\u0026rsquo;s an additional step of pixelization to create an image, but it also means that arbitrary images can be made from a single projection or slice operation.","tags":["archive","yt-core"],"title":"Quad Tree Projections","url":"https://yt-project.github.io/yt-blog/posts/post_04_quad-tree-projections/"},{"categories":["archive"],"description":"The Parallel Merger Tree in yt, like most of the code in yt, has a rich history of changes and upgrades. One of the most significant upgrades was a change in the way the SQLite database file is updated during the course of building the merger tree. Briefly, the database contains all the information about the merger tree of the halos, as well as the specifics of each halo, such as the mass, position or bulk velocity.","tags":["archive","halos","yt-core"],"title":"How the Merger Tree Sped Up SQLite Database UPDATEs","url":"https://yt-project.github.io/yt-blog/posts/post_03_how-the-merger-tree-sped-up-sqlite-database-update-s/"},{"categories":["archive"],"description":"For about a year and a half now, most of the unstable development of yt has occurred inside a mercurial repo. Mercurial is a distributed version control system, not unlike git or bzr, where each checkout brings with it the entire history of the repository and enables full development. Each individual can commit changes to their own repository, while still accepting changes from others. It also makes it much easier to submit patches upstream.","tags":["archive","community"],"title":"yt has moved to mercurial!","url":"https://yt-project.github.io/yt-blog/posts/post_02_yt-has-moved-to-mercurial/"},{"categories":["archive"],"description":"Last week I was approached by a friend and collaborator to prepare some large volume renderings using the software volume renderer in yt. In the past we\u0026rsquo;ve successfully made very, very large image renderings using yt \u0026ndash; Sam\u0026rsquo;s even made one at 8192^2, although at extremely high resolution like that sometimes the lack of fidelity in the underlying volume renderer shows up; sometimes even artifacts in the AMR grid boundaries, but that\u0026rsquo;s less common.","tags":["archive","Volume Rendering"],"title":"Figuring Out Stereo Volume Rendering","url":"https://yt-project.github.io/yt-blog/posts/post_01_figuring-out-stereo-volume-rendering/"},{"categories":["archive"],"description":"\u003cp\u003eLet\u0026rsquo;s talk about the progress we\u0026rsquo;ve made on a kD-Tree decomposition.\u003c/p\u003e","tags":["archive","yt-core"],"title":"Volume Rendering with a kD-Tree Decomposition","url":"https://yt-project.github.io/yt-blog/posts/post_00_volume-rendering-with-a-kd-tree-decomposition/"}]
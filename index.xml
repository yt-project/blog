<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>yt project blog</title><link>https://yt-project.github.io/blog/</link><description>Recent content on yt project blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 27 Jan 2022 11:32:15 -0600</lastBuildDate><atom:link href="https://yt-project.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>My semester working on yt-idv through NCSA SPIN</title><link>https://yt-project.github.io/blog/posts/yt_idv_spin/</link><pubDate>Thu, 27 Jan 2022 11:32:15 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/yt_idv_spin/</guid><description>&lt;p>A brief overview of my contributions to yt-idv this past semester.&lt;/p></description></item><item><title>PhasePlots are the Best Plots</title><link>https://yt-project.github.io/blog/posts/phaseplots_bestplots/</link><pubDate>Sun, 21 Feb 2021 15:57:41 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/phaseplots_bestplots/</guid><description>&lt;p>A story on why I love PhasePlots.&lt;/p></description></item><item><title>Contributing to the yt Blog!</title><link>https://yt-project.github.io/blog/posts/contributing/</link><pubDate>Thu, 28 Jan 2021 15:57:31 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/contributing/</guid><description>&lt;p>Do you have:&lt;/p>
&lt;ul>
&lt;li>A new feature that you think is interesting?&lt;/li>
&lt;li>A way that you use yt that you think others would like?&lt;/li>
&lt;li>A tutorial on how to replicate your analysis?&lt;/li>
&lt;li>A neat application for yt?&lt;/li>
&lt;/ul>
&lt;p>Consider contributing to the blog! Here&amp;rsquo;s how to do it!&lt;/p></description></item><item><title>Dask and yt: a pre-YTEP</title><link>https://yt-project.github.io/blog/posts/dask_yt_pytep/</link><pubDate>Wed, 27 Jan 2021 10:15:14 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/dask_yt_pytep/</guid><description>&lt;p>An update and proposal on continuing development of Dask and yt.&lt;/p></description></item><item><title>A yt-napari party</title><link>https://yt-project.github.io/blog/posts/ytnapariparty/</link><pubDate>Tue, 12 Jan 2021 18:22:25 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/ytnapariparty/</guid><description>&lt;p>Interactive visualization of &lt;em>yt&lt;/em> data using &lt;em>napari&lt;/em>?&lt;/p></description></item><item><title>Line Integral Convolution for Vector Field Visualization</title><link>https://yt-project.github.io/blog/posts/line-integral/</link><pubDate>Thu, 20 Aug 2015 14:14:29 -0500</pubDate><guid>https://yt-project.github.io/blog/posts/line-integral/</guid><description>&lt;p>How to visualize a line integral convolution for a vector field with yt&lt;/p></description></item><item><title>Much Ado About Governance</title><link>https://yt-project.github.io/blog/posts/governance/</link><pubDate>Fri, 10 Oct 2014 16:19:10 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/governance/</guid><description>&lt;p>A new post about our project&amp;rsquo;s governance!&lt;/p></description></item><item><title>Relicensing yt from GPLv3 to BSD</title><link>https://yt-project.github.io/blog/posts/relicensing/</link><pubDate>Thu, 12 Sep 2013 16:36:29 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/relicensing/</guid><description>&lt;p>Our reasoning for switching licenses for the yt-project&lt;/p></description></item><item><title>Obj File Exporter for Surfaces</title><link>https://yt-project.github.io/blog/posts/objexporter/</link><pubDate>Sat, 30 Mar 2013 16:56:06 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/objexporter/</guid><description>&lt;p>How to export surfaces into an obj file (will it blend?!)&lt;/p></description></item><item><title>The first yt development workshop!</title><link>https://yt-project.github.io/blog/posts/devworkshop2013/</link><pubDate>Mon, 18 Mar 2013 17:04:06 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/devworkshop2013/</guid><description>&lt;p>On March 6-8, 2013 we held a yt development workshop at UCSC. Let&amp;rsquo;s talk about
it!&lt;/p></description></item><item><title>yt 2.5 released!</title><link>https://yt-project.github.io/blog/posts/yt-25/</link><pubDate>Sat, 02 Mar 2013 16:46:16 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/yt-25/</guid><description>&lt;p>Announcing yt 2.5!&lt;/p></description></item><item><title>Announcing the 2013 yt development workshop</title><link>https://yt-project.github.io/blog/posts/devworkshopannounce2013/</link><pubDate>Sun, 13 Jan 2013 13:24:33 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/devworkshopannounce2013/</guid><description>&lt;p>Announcing the 2013 yt developer workshop!&lt;/p></description></item><item><title>Particle Generators</title><link>https://yt-project.github.io/blog/posts/particle-gen/</link><pubDate>Fri, 04 Jan 2013 13:27:46 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/particle-gen/</guid><description>&lt;p>This post shows how to generate particle fields from pre-defined particle
lists, lattice distributions, and distributions based on density fields.&lt;/p></description></item><item><title>2012 In Review</title><link>https://yt-project.github.io/blog/posts/2012-review/</link><pubDate>Mon, 31 Dec 2012 13:34:06 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/2012-review/</guid><description>&lt;p>What was 2012 like for the yt community? Let&amp;rsquo;s look back together!&lt;/p></description></item><item><title>3D Surfaces and Sketchfab</title><link>https://yt-project.github.io/blog/posts/sketchfab/</link><pubDate>Wed, 05 Dec 2012 13:37:36 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/sketchfab/</guid><description>&lt;p>Let&amp;rsquo;s talk about exporting surfaces to sketchfab with yt!&lt;/p></description></item><item><title>The Rockstar Halo Finder in yt</title><link>https://yt-project.github.io/blog/posts/rockstar/</link><pubDate>Mon, 26 Nov 2012 20:22:16 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/rockstar/</guid><description>Over the last few weeks, Matt Turk, Christopher Moody, and Stephen Skory have been working to improve the integration of the Rockstar halo finder in yt. Rockstar was written primarily by Peter Behroozi and has a main website here. Linked there is the source and the most current edition of the method paper which includes a timing and scaling study.
Rockstar is a six dimensional halo finder, meaning that it considers both particle position and momentum when locating dark matter halos.</description></item><item><title>What's up with yt 3.0?</title><link>https://yt-project.github.io/blog/posts/whats_up_with_30/</link><pubDate>Thu, 15 Nov 2012 21:05:33 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/whats_up_with_30/</guid><description>This is a long blog post! The short of it is:
If you&amp;rsquo;re using Enzo or FLASH, you can probably do most of what you want to do with 3.0. But there are probably bugs, and you can&amp;rsquo;t volume render yet. But every bug or missing feature you find is a useful piece of information that can help speed up development. If you&amp;rsquo;re using RAMSES, 3.0 will be a vast improvement!</description></item><item><title>Our New Blog</title><link>https://yt-project.github.io/blog/posts/fork_blogging/</link><pubDate>Sun, 04 Nov 2012 22:09:04 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/fork_blogging/</guid><description>&lt;p>We&amp;rsquo;ve got a new blog! Here&amp;rsquo;s a post that talks about the changes we&amp;rsquo;ve made and
how we expect to move forward!&lt;/p></description></item><item><title>Simple Grid Refinement</title><link>https://yt-project.github.io/blog/posts/simple_grid_refinement/</link><pubDate>Tue, 30 Oct 2012 22:16:54 -0600</pubDate><guid>https://yt-project.github.io/blog/posts/simple_grid_refinement/</guid><description>Notebook Download
Grid refinement In yt, you can now generate very simple initial conditions:
In[1]:
from yt.mods import * from yt.frontends.stream.api import load_uniform_grid from yt.frontends.gdf.api import * from yt.utilities.grid_data_format.writer import write_to_gdf class DataModifier(object): pass class TophatSphere(DataModifier): def __init__(self, fields, radius, center): self.fields = fields self.radius = radius self.center = center def apply(self, grid, container): r = ((grid[&amp;#39;x&amp;#39;] - self.center[0])**2.0 + (grid[&amp;#39;y&amp;#39;] - self.center[1])**2.0 + (grid[&amp;#39;z&amp;#39;] - self.center[2])**2.0)**0.5 for field in self.</description></item><item><title>yt 2.4 released!</title><link>https://yt-project.github.io/blog/posts/post_43_yt-2-4-released/</link><pubDate>Fri, 03 Aug 2012 02:43:40 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_43_yt-2-4-released/</guid><description>Weâ€™re proud to announce the release of version 2.4 of the yt Project, http://yt-project.org/ . The new version includes many new features, refinements of existing features and numerous bugfixes. We encourage all users to upgrade to take advantage of the changes.
yt is a community-developed analysis and visualization toolkit, primarily directed at astrophysical hydrodynamics simulations. It provides full support for output from the Enzo, FLASH, Orion, and Nyx codes, with preliminary support for several others.</description></item><item><title>yt Google+ Hangout tomorrow!</title><link>https://yt-project.github.io/blog/posts/post_42_yt-google-hangout-tomorrow/</link><pubDate>Mon, 30 Apr 2012 04:42:04 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_42_yt-google-hangout-tomorrow/</guid><description>Tomorrow we&amp;rsquo;re going to try something new &amp;ndash; Google Hangouts! If you&amp;rsquo;d like help with something, to share some feedback, or just to say hi to other community members, stop by Tuesday, May 1st. We&amp;rsquo;ll be starting up around 2PM Eastern and continuing for a couple hours.
If this works out, we&amp;rsquo;ll try it again from time to time, to catch up on new developments, help out with scripts or visualization issues, soliciting feedback, and to chat about using and developing yt.</description></item><item><title>What's new with yt?</title><link>https://yt-project.github.io/blog/posts/post_41_what-s-new-with-yt/</link><pubDate>Mon, 13 Feb 2012 03:10:21 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_41_what-s-new-with-yt/</guid><description>Now that the post-workshop preparations and work have settled down, I thought it might be interesting to share some of the developments going on with yt. We&amp;rsquo;re still a long way from a new release, so these interim &amp;lsquo;development&amp;rsquo; updates are meant to be a bit of a teaser. As always, these features are either in the main branch or (if noted) in a public fork on BitBucket. If they sound interesting, drop us a line on `yt-dev &amp;lt;http://lists.</description></item><item><title>yt workshop 2012 - a success!</title><link>https://yt-project.github.io/blog/posts/post_40_yt-workshop-2012-a-success/</link><pubDate>Mon, 30 Jan 2012 09:02:09 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_40_yt-workshop-2012-a-success/</guid><description>The yt workshop last week in Chicago ( http://yt-project.org/workshop2012/ ) was an enormous success. On behalf of the organizing and technical committees, I&amp;rsquo;d like to specifically thank the FLASH Center, particularly Don Lamb, Mila Kuntu, Carrie Eder, for their hospitality; the venue was outstanding and their hospitality touching. Additionally, we&amp;rsquo;re very grateful to the Adler Planetarium&amp;rsquo;s Doug Roberts and Mark SubbaRao for hosting us on Wednesday evening &amp;ndash; seeing the planetarium show as well as volume renderings made by yt users up on the dome was so much fun.</description></item><item><title>Workshop in just a week!</title><link>https://yt-project.github.io/blog/posts/post_39_workshop-in-just-a-week/</link><pubDate>Mon, 16 Jan 2012 18:45:43 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_39_workshop-in-just-a-week/</guid><description>The first yt workshop is in just about a week. We&amp;rsquo;ve updated the website with the current list of talks, along with information about getting to and from the workshop from the conference hotel, and information about how to get the sample data. Keep your eyes on the website in the lead up to the workshop, as we&amp;rsquo;ll be posting a script for fisheye lens renderings for our viz night at the Adler, information about the talks and example scripts, and other useful info.</description></item><item><title>yt Version 2.3 Announcement</title><link>https://yt-project.github.io/blog/posts/post_38_yt-version-2-3-announcement/</link><pubDate>Thu, 15 Dec 2011 10:44:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_38_yt-version-2-3-announcement/</guid><description>Just in time for the New Year, weâ€™re happy to announce the release of yt version 2.3! ( http://yt-project.org/ ) The new version includes many new modules and enhancements, and the usual set of bug fixes over the last point release. We encourage all users to upgrade to take advantage of the changes.
yt is a community-developed analysis and visualization toolkit for astrophysical simulation data. yt provides full support for Enzo, Orion, Nyx, and FLASH codes, with preliminary support for the RAMSES code (and a handful of others.</description></item><item><title>yt workshop registration is open!</title><link>https://yt-project.github.io/blog/posts/post_37_yt-workshop-registration-is-open/</link><pubDate>Mon, 28 Nov 2011 13:17:49 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_37_yt-workshop-registration-is-open/</guid><description>Registration for the 2012 yt workshop, to be held at the FLASH center in Chicago from January 24-26, is now open.
Please register here: http://yt- project.org/workshop2012/</description></item><item><title>Boolean Data Containers</title><link>https://yt-project.github.io/blog/posts/post_36_boolean-data-containers/</link><pubDate>Wed, 09 Nov 2011 07:03:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_36_boolean-data-containers/</guid><description>A useful new addition to yt are boolean data containers. These are hybrid data containers that are built by relating already-defined data containers with each other using boolean operators. Nested boolean logic, using parentheses, is also supported. The boolean data container (or volume) is made by constructing a list of volumes interspersed with operators given as strings. Below are some examples of what can be done with boolean data containers.</description></item><item><title>Google+ Page for yt</title><link>https://yt-project.github.io/blog/posts/post_35_google-page-for-yt/</link><pubDate>Wed, 09 Nov 2011 03:23:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_35_google-page-for-yt/</guid><description>yt now has a Google Plus page. Here&amp;rsquo;s we&amp;rsquo;ll post smaller, less blog-worthy items, hold video conferencing &amp;lsquo;hangouts&amp;rsquo;, and so on. Encircle away! And if you post something you&amp;rsquo;d like to be reshared, just be sure to explicitly share it with &amp;lsquo;+yt&amp;rsquo; so we know.</description></item><item><title>yt Testing and Parallelism</title><link>https://yt-project.github.io/blog/posts/post_34_yt-testing-parallelism/</link><pubDate>Mon, 24 Oct 2011 07:14:22 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_34_yt-testing-parallelism/</guid><description>A few of us worked this past week on a couple yt projects and made what we think is significant progress. Two of the items we focused on were testing and parallelism.
For testing, we&amp;rsquo;ve broadened the test suite to include many more functions and derived quantities. We now have 548 tests that include (off and on-axis) slices, (off and on- axis) projections, phase distributions, halo finding, volume rendering, and geometrical region cuts such as rectangular solids, spheres, and disks.</description></item><item><title>Announcing the 2012 yt Workshop</title><link>https://yt-project.github.io/blog/posts/post_33_announcing-the-2012-yt-workshop/</link><pubDate>Mon, 03 Oct 2011 17:24:29 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_33_announcing-the-2012-yt-workshop/</guid><description>I&amp;rsquo;m pleased to announce the 2012 yt Workshop at the FLASH Center in Chicago, January 24-26.
The workshop will be aimed at both users and developers of yt. We will begin with intensive user training, moving from basic usage to advanced and parallel usage. Users are encouraged to bring their ideas and prototypes for new analysis routines as there will be opportunities to work with more experienced developers. We will then address to how to modify, extend and contribute to yt, and transition to a developers workshop.</description></item><item><title>New Screencasts</title><link>https://yt-project.github.io/blog/posts/post_32_new-screencasts/</link><pubDate>Tue, 27 Sep 2011 12:20:56 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_32_new-screencasts/</guid><description>A few of the yt developers have been experimenting with screencasts to show off new features or demonstrate how to do some things. Sam and I have both prepared screencasts on volume rendering and getting started with developing, respectively. Check them out below, and please feel free to leave comments and let us know what you think &amp;ndash; not just about the screencasts, but about what they demonstrate, and if you think any of the concepts or routines could be made easier.</description></item><item><title>Dataset Tracking with yt</title><link>https://yt-project.github.io/blog/posts/post_31_dataset-tracking-with-yt/</link><pubDate>Mon, 12 Sep 2011 10:53:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_31_dataset-tracking-with-yt/</guid><description>In this post I&amp;rsquo;d like to discuss a bit of work in progress to highlight some exciting new features that we hope to have working in yt sometime soon.
On any machine that runs yt, there is a file created in the users home directory named ~/.yt/parameter_files.csv that yt uses internally to keep track of datasets it has seen. This is just a simple text file containing comma-separated entries with a few pieces of information about datasets, like their location on disk and the last date and time they were &amp;lsquo;seen&amp;rsquo; by yt.</description></item><item><title>Optimizing yt</title><link>https://yt-project.github.io/blog/posts/post_30_optimizing-yt/</link><pubDate>Sat, 10 Sep 2011 08:39:52 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_30_optimizing-yt/</guid><description>This last week, following the release of version 2.2 of yt, I spent a bit of time looking at speed improvements. There were several places that the code was unacceptably slow:
1D profiles (as noted in our method paper, even) Ghost-zone generation RAMSES grid data loading The first of these was relatively easy to fix. In the past, 1D profiles (unlike 2D profiles) were calculated using pure-python mechanisms; numpy was used for digitization, then inverse binning was conducted by the numpy &amp;lsquo;where&amp;rsquo; command, and these binnings were used to generate the overall histogram.</description></item><item><title>yt-2.2 Release Announcement</title><link>https://yt-project.github.io/blog/posts/post_29_yt-2-2-release-announcement/</link><pubDate>Fri, 02 Sep 2011 06:56:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_29_yt-2-2-release-announcement/</guid><description>(Please feel encouraged to forward this message to any other interested parties.)
We are proud to announce the release of yt version 2.2. This release includes several new features, bug fixes, and numerous improvements to the code base and documentation. At the new yt homepage, http://yt-project.org/ , an installation script, a cookbook, documentation and a guide to getting involved can be found. We are particularly proud of the new GUI, entitled &amp;ldquo;Reason,&amp;rdquo; which allows real-time exploration of datasets, and which can be used (locally or remotely over SSH) with no dependencies other than a web browser.</description></item><item><title>This blog has moved -- but you don't have to!</title><link>https://yt-project.github.io/blog/posts/post_28_this-blog-has-moved-but-you-don-t-have-to/</link><pubDate>Wed, 31 Aug 2011 02:58:50 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_28_this-blog-has-moved-but-you-don-t-have-to/</guid><description>In keeping with the project rename we&amp;rsquo;ve moved this blog from it&amp;rsquo;s old home at blog.enzotools.org to its new home at blog.yt-project.org. But, we&amp;rsquo;ve put in a few redirects, and the RSS feed hasn&amp;rsquo;t moved, so you shouldn&amp;rsquo;t need to do anything different to get here. We&amp;rsquo;ve also enabled anonymous commenting, so feel free to comment below. (But, of course, letting us know who you are would certainly help with keeping in touch!</description></item><item><title>Introducing the yt Hub</title><link>https://yt-project.github.io/blog/posts/post_27_introducing-the-yt-hub/</link><pubDate>Wed, 24 Aug 2011 13:28:30 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_27_introducing-the-yt-hub/</guid><description>I am very excited to announce the yt Hub: http://hub.yt-project.org/.
The yt Hub is a gathering place for all things related to running, analyzing, and presenting astrophysical simulations. Once upon a time, we had the Enzotools Barn, which was a place to share Enzo scripts unrelated to yt, including hosting of those scripts. The Barn was a minor success, but had a very limited scope and a somewhat clunky user experience.</description></item><item><title>We're now the yt Project!</title><link>https://yt-project.github.io/blog/posts/post_26_we-re-now-the-yt-project/</link><pubDate>Mon, 22 Aug 2011 08:39:56 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_26_we-re-now-the-yt-project/</guid><description>This is just a brief blog entry &amp;ndash; other news is on the way soon! &amp;ndash; to let everyone know we&amp;rsquo;ve updated our domains. In keeping with the change in focus of the yt project, expanding to work with multiple codes and take broader views of analysis and visualization, we have moved from enzotools.org to yt-project.org. Some other exciting changes will be coming from this in the future, too!
For more info, see the mailing list announcement.</description></item><item><title>A movie of yt in paraview</title><link>https://yt-project.github.io/blog/posts/post_25_a-movie-of-yt-in-paraview/</link><pubDate>Mon, 08 Aug 2011 20:49:46 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_25_a-movie-of-yt-in-paraview/</guid><description>Jorge posted this video of using yt inside ParaView. It demonstrated multi-res slices, projections, and even volume rendering with an adjustable transfer function. I think it&amp;rsquo;s pretty incredible. Thanks very much to Jorge and Kitware for their hard work, and it&amp;rsquo;ll be exciting to see where it goes from here!</description></item><item><title>A mission statement and a new homepage!</title><link>https://yt-project.github.io/blog/posts/post_24_a-mission-statement-and-a-new-homepage/</link><pubDate>Wed, 29 Jun 2011 18:28:05 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_24_a-mission-statement-and-a-new-homepage/</guid><description>In case you haven&amp;rsquo;t visited our front page lately, the yt homepage has been redesigned! The old homepage was nice and functional, but it tried to cram too much into too small a place. The new homepage focuses on the three main questions people have when they go to the yt page: &amp;lsquo;How do I get it?', &amp;lsquo;How do I use it?', and &amp;lsquo;How do I participate?&amp;rsquo;
The new page is focused on some concrete examples, some quantitative analysis, and features a heavy dosage of the yt community &amp;ndash; in fact, the redesign came about through a conversation in IRC, where a few of the core developers were speculating about how best to convey how to participate and how strong a community yt has.</description></item><item><title>ParaView and yt</title><link>https://yt-project.github.io/blog/posts/post_23_paraview-and-yt/</link><pubDate>Mon, 13 Jun 2011 20:09:34 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_23_paraview-and-yt/</guid><description>Thanks to some awesome work by developers at Kitware, yt can now be called from within ParaView!
This relies on a couple things, all of which are pretty exciting moving forward. The idea behind this is to leverage where the two codes have their own strengths and weaknesses, and identify places where they can work productively together. For instance, yt has been designed to provide astrophysical analysis; in this way, it can generate adaptive projections, spectral energy distributions and so on.</description></item><item><title>Gmaps-ify your data!</title><link>https://yt-project.github.io/blog/posts/post_22_gmaps-ify-your-data/</link><pubDate>Thu, 09 Jun 2011 21:08:48 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_22_gmaps-ify-your-data/</guid><description>A couple of us have been working on a comprehensive notebook web GUI for yt. It&amp;rsquo;s not ready yet.
BUT! In advance of that, we&amp;rsquo;ve rolled a portion of that into something called the &amp;lsquo;mapserver&amp;rsquo; into the development branch. This is a small, standalone webapp that implements a rendered-on-the-fly google maps interface in yt. To run it, just go into a directory that has some data, and run:
yt mapserver DD0054/DD0054 (where &amp;lsquo;DD0054/DD0054&amp;rsquo; is the same thing you&amp;rsquo;d feed to &amp;lsquo;load&amp;rsquo; in a script.</description></item><item><title>yt development - Quad trees, Tickets and more</title><link>https://yt-project.github.io/blog/posts/post_21_yt-development-quad-trees-tickets-and-more/</link><pubDate>Thu, 02 Jun 2011 20:20:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_21_yt-development-quad-trees-tickets-and-more/</guid><description>It&amp;rsquo;s been a while since the last Development post â€” but in that time, some pretty fun things have been going on. These are some of the smaller things, but there are bigger things in store which I&amp;rsquo;ll write about next time.
QuadTree Projections For a while, there has been the option to use a QuadTree data structure to conduct projections through a simulation volume. This was accessible through the quad_proj attribute, which respected the same interface as the normal proj interface.</description></item><item><title>yt Logo Contest, and possibly a free mug!</title><link>https://yt-project.github.io/blog/posts/post_20_yt-logo-contest-and-possibly-a-free-mug/</link><pubDate>Tue, 26 Apr 2011 17:46:57 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_20_yt-logo-contest-and-possibly-a-free-mug/</guid><description>yt is in need of an awesome new logo, which is why we are announcing the first ever new logo contest! So here&amp;rsquo;s the deal:
We&amp;rsquo;ll accept entries for the next two weeks. Let&amp;rsquo;s arbitrarily say Tuesday, May 10th, at 11:59:59 pm EST. If there is more than one entry, we will put it up for a community vote at that time.
Oh, and the most important part &amp;ndash; the winner will get a coffee mug with their new logo front and center!</description></item><item><title>yt 2.1 Release Announcement</title><link>https://yt-project.github.io/blog/posts/post_19_yt-2-1-release-announcement/</link><pubDate>Fri, 08 Apr 2011 04:57:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_19_yt-2-1-release-announcement/</guid><description>We are proud to announce the release of yt version 2.1. This release includes several new features, bug fixes, and numerous improvements to the code base and documentation. At the yt homepage, http://yt.enzotools.org/ , an installation script, a cookbook, documentation and a guide to getting involved can be found.
yt is an analysis and visualization toolkit for Adaptive Mesh Refinement data. yt provides full support for Enzo, Orion, and FLASH codes, with preliminary support for RAMSES, ART, Chombo, CASTRO and MAESTRO codes.</description></item><item><title>yt development - Treecodes, GUIs, IRC and more!</title><link>https://yt-project.github.io/blog/posts/post_18_yt-development-treecodes-guis-irc-and-more/</link><pubDate>Mon, 04 Apr 2011 06:40:54 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_18_yt-development-treecodes-guis-irc-and-more/</guid><description>It&amp;rsquo;s been nearly a month since the last yt development post; in that time, there&amp;rsquo;s been quite a bit of development in a couple different areas. This is culminating in a 2.1 release, for which Sam Skillman is release manager, sometime in the next few days.
Streamlines and Treecode SamS has spent some time over the last month developing two types of streamline code. The first integrates a series of streamlines over a selection of the domain, which can then be visualizing using the mplot3d package.</description></item><item><title>yt development - External Analysis and Simulation Code Support</title><link>https://yt-project.github.io/blog/posts/post_17_yt-development-external-analysis-and-simulation-code-support/</link><pubDate>Mon, 07 Mar 2011 06:17:09 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_17_yt-development-external-analysis-and-simulation-code-support/</guid><description>This last week was the first full week on BitBucket and so far I think it has been quite successful. The new development process is for most of the core developers to maintain personal forks for experimental changes, or longer term changes, and then to commit directly or merge when bug fixes or features are ready to be integrated. The list of forks is easily visible and each individual fork&amp;rsquo;s divergence from the primary repository can be viewed by clicking on the green arrows.</description></item><item><title>yt development - BitBucket, Task Queues, and Streamlines</title><link>https://yt-project.github.io/blog/posts/post_16_yt-development-bitbucket-task-queues-and-streamlines/</link><pubDate>Mon, 28 Feb 2011 05:35:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_16_yt-development-bitbucket-task-queues-and-streamlines/</guid><description>The major changes this week came mostly in the form of administrative shifts. However, SamS did some great work I&amp;rsquo;m going to hint at (he&amp;rsquo;ll post a blog entry later) and I started laying the ground work for something I&amp;rsquo;ve been excited about for a while, an MPI-aware task queue.
BitBucket For the last couple months, yt has been struggling under the constraints of the hg server on its hosting plan.</description></item><item><title>Example HEALpix Contour Rendering Movie</title><link>https://yt-project.github.io/blog/posts/post_15_example-healpix-contour-rendering-movie/</link><pubDate>Mon, 21 Feb 2011 06:21:01 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_15_example-healpix-contour-rendering-movie/</guid><description>In response to Matt&amp;rsquo;s post &amp;lt;http://blog.enzotools.org/yt-development-healpix- and-contour-tree&amp;gt; on the HEALpix rendering update, I thought it would be worth posting an example movie. This shows the all-sky rendering of an observer moving from the front face of a simulation through the volume to the back face. The test simulation is 32 Mpc/h on a side with 64^3 root grid cells and up to 4 levels of refinement. At the start it looks like a disc because the entire simulation is in front of the camera and by the end it is all around the sides, indicating the simulation is behind the camera.</description></item><item><title>yt development - HEALpix and Contour Tree</title><link>https://yt-project.github.io/blog/posts/post_14_yt-development-healpix-and-contour-tree/</link><pubDate>Mon, 21 Feb 2011 04:14:53 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_14_yt-development-healpix-and-contour-tree/</guid><description>This week there was not very much yt development. However, a few notes may be of interest. SamS has updated the HEALPix camera to support ordered projections; what this means is that you can now make volume renderings using a standard color transfer function, or even the Planck transfer function, that cover 4pi of the sky. I am still working on integrating a method for creating images easily, but for now the scripts from last week should work.</description></item><item><title>yt development - All-sky column density calculation</title><link>https://yt-project.github.io/blog/posts/post_13_yt-development-all-sky-column-density-calculation/</link><pubDate>Mon, 14 Feb 2011 06:13:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_13_yt-development-all-sky-column-density-calculation/</guid><description>This week I added the ability to calculate all-sky column densities. This functionality uses HEALpix to calculate equally-area regions on the sky and then shoots out rays from a central source to some fixed radius, accumulating values of a field along the way. Although so far I&amp;rsquo;ve only used it to calculate column densities of &amp;ldquo;Density&amp;rdquo; it could be used for other values as well, including all- sky weighted averages of quantities.</description></item><item><title>yt development - Documentation</title><link>https://yt-project.github.io/blog/posts/post_12_yt-development-documentation/</link><pubDate>Mon, 07 Feb 2011 05:29:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_12_yt-development-documentation/</guid><description>As a result of progress in my scientific goals, and the application of recent yt developments to them, I did not make many changes or developments in yt this week. When I did work on yt, I primarily spent time re-organizing the documentation and fixing several errors. I have added an &amp;ldquo;installation&amp;rdquo; section, consolidated a few sections, and wrote two new sections on how to make plots and on how to generate derived data products.</description></item><item><title>yt development - Time series, and more</title><link>https://yt-project.github.io/blog/posts/post_11_yt-development-time-series-and-more/</link><pubDate>Mon, 31 Jan 2011 04:53:10 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_11_yt-development-time-series-and-more/</guid><description>Not much yt development went on in the last week; I spent some time working with Enzo and driving forward simulation goals, which resulted in some development that directly benefited those simulation goals. However, this fortuitously coincided with work I have been eager to return to for quite some time: namely, time series analysis!
Time Series Analysis The problem with time series analysis in yt has, to this point, been an issue of verbosity and clunkiness.</description></item><item><title>yt development - 2.0, Cython, and physics module wrapping</title><link>https://yt-project.github.io/blog/posts/post_10_yt-development-2-0-cython-and-physics-module-wrapping/</link><pubDate>Mon, 24 Jan 2011 07:10:50 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_10_yt-development-2-0-cython-and-physics-module-wrapping/</guid><description>This is the second blog entry in the weekly series, with some updates on what took place last week with respect to yt development. One of the more exciting things is the final one, which is the start of what I want to focus on for the next couple months or years: integration of physics modules with analysis code, and then the ultimate inversion of that relationship.
yt-2.0 This week saw the release of yt 2.</description></item><item><title>yt development - star particle rendering, simple merger trees and documentation</title><link>https://yt-project.github.io/blog/posts/post_09_yt-development-star-particle-rendering-simple-merger-trees-and-documentation/</link><pubDate>Mon, 17 Jan 2011 05:27:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_09_yt-development-star-particle-rendering-simple-merger-trees-and-documentation/</guid><description>This is the first of a new series of &amp;ldquo;what&amp;rsquo;s up with yt&amp;rdquo; blog posts I&amp;rsquo;m going to be writing. By keeping this log, I hope that maybe some things that would otherwise get lost in the version control changesets will get brought to greater light. This covers the time period of the first couple weeks in January.
Star Particle Rendering On the mailing list, the question of adding star particles to a volume rendering was raised.</description></item><item><title>AMR kd-Tree rendering added to yt</title><link>https://yt-project.github.io/blog/posts/post_08_amr-kd-tree-rendering-added-to-yt/</link><pubDate>Tue, 09 Nov 2010 15:32:03 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_08_amr-kd-tree-rendering-added-to-yt/</guid><description>After a significant amount of development and restructuring, I have added the AMR kd-Tree rendering framework to yt. There are several posts on this blog about this module already, so I won&amp;rsquo;t go over all the background information again. Here I&amp;rsquo;d like to showcase some of the recent successes and capabilities of the volume rendering within yt.
New optimization options:There are a few important additions that have made it possible to render some of the largest AMR simulations we have available.</description></item><item><title>Enzo 2.0 and Inline yt</title><link>https://yt-project.github.io/blog/posts/post_07_enzo-2-0-and-inline-yt/</link><pubDate>Thu, 30 Sep 2010 20:05:36 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_07_enzo-2-0-and-inline-yt/</guid><description>Enzo 2.0 has just been released to its new Google Code website. This release features preliminary support for inline Python analysis, using yt.
In the Enzo documentation there&amp;rsquo;s a brief section on how to use yt for inline analysis. As it stands, many features are not fully functional, but things like phase plots, profiles, derived quantities and slices all work. This functionality is currently untested at large (&amp;gt; 128) processors, but for small runs &amp;ndash; particularly debugging runs!</description></item><item><title>kD-Tree Rendering Improvements</title><link>https://yt-project.github.io/blog/posts/post_06_kd-tree-rendering-improvements/</link><pubDate>Mon, 27 Sep 2010 11:46:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_06_kd-tree-rendering-improvements/</guid><description>Hi all,
Just sharing a video here that showcases some improvements I&amp;rsquo;ve made to the kD-tree rendering that will be making its way to yt for the 2.0 release. You can download it render_movie.3gp|here
Just to be clear this is showing the rendering of a cosmology simulation with a 64^3 root grid + 6 AMR levels in real time on 8 processors. The script is run in parallel, with the root processor displaying the results once each frame is finished.</description></item><item><title>Improvements to Parallelism</title><link>https://yt-project.github.io/blog/posts/post_05_improvements-to-parallelism/</link><pubDate>Sun, 26 Sep 2010 21:06:56 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_05_improvements-to-parallelism/</guid><description>The last few days I&amp;rsquo;ve spent some time looking at how parallelism in yt performs. I conducted two different tests, both of which operated on the 512^3, 7 level &amp;lsquo;Santa Fe Light Cone&amp;rsquo; dataset RD0036. This dataset has 5.5e8 total cells and in the neighborhood of 380,000 grids. I ran four different tests: a 1D profile of the entire dataset, a 2D profile of the entire dataset, and projections of both &amp;lsquo;Density&amp;rsquo; (requires IO) and &amp;lsquo;Ones&amp;rsquo; (doesn&amp;rsquo;t require IO).</description></item><item><title>Quad Tree Projections</title><link>https://yt-project.github.io/blog/posts/post_04_quad-tree-projections/</link><pubDate>Fri, 10 Sep 2010 21:41:23 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_04_quad-tree-projections/</guid><description>The current method for projections in yt is based on a home-grown algorithm for calculating grid overlap and joining points. I&amp;rsquo;ve always been pretty proud of it &amp;ndash; it gave good results, and it succeeded at the project-once-make-many-images philosophy that went into its design. Rather than storing a 2D array of pixels, projections and slices in yt store flat arrays of image plane coordinates and cell widths. This means that there&amp;rsquo;s an additional step of pixelization to create an image, but it also means that arbitrary images can be made from a single projection or slice operation.</description></item><item><title>How the Merger Tree Sped Up SQLite Database UPDATEs</title><link>https://yt-project.github.io/blog/posts/post_03_how-the-merger-tree-sped-up-sqlite-database-update-s/</link><pubDate>Thu, 09 Sep 2010 13:26:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_03_how-the-merger-tree-sped-up-sqlite-database-update-s/</guid><description>The Parallel Merger Tree in yt, like most of the code in yt, has a rich history of changes and upgrades. One of the most significant upgrades was a change in the way the SQLite database file is updated during the course of building the merger tree. Briefly, the database contains all the information about the merger tree of the halos, as well as the specifics of each halo, such as the mass, position or bulk velocity.</description></item><item><title>yt has moved to mercurial!</title><link>https://yt-project.github.io/blog/posts/post_02_yt-has-moved-to-mercurial/</link><pubDate>Thu, 09 Sep 2010 06:58:23 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_02_yt-has-moved-to-mercurial/</guid><description>For about a year and a half now, most of the unstable development of yt has occurred inside a mercurial repo. Mercurial is a distributed version control system, not unlike git or bzr, where each checkout brings with it the entire history of the repository and enables full development. Each individual can commit changes to their own repository, while still accepting changes from others. It also makes it much easier to submit patches upstream.</description></item><item><title>Figuring Out Stereo Volume Rendering</title><link>https://yt-project.github.io/blog/posts/post_01_figuring-out-stereo-volume-rendering/</link><pubDate>Sat, 22 May 2010 09:13:00 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_01_figuring-out-stereo-volume-rendering/</guid><description>Last week I was approached by a friend and collaborator to prepare some large volume renderings using the software volume renderer in yt. In the past we&amp;rsquo;ve successfully made very, very large image renderings using yt &amp;ndash; Sam&amp;rsquo;s even made one at 8192^2, although at extremely high resolution like that sometimes the lack of fidelity in the underlying volume renderer shows up; sometimes even artifacts in the AMR grid boundaries, but that&amp;rsquo;s less common.</description></item><item><title>Volume Rendering with a kD-Tree Decomposition</title><link>https://yt-project.github.io/blog/posts/post_00_volume-rendering-with-a-kd-tree-decomposition/</link><pubDate>Thu, 06 May 2010 06:53:35 +0000</pubDate><guid>https://yt-project.github.io/blog/posts/post_00_volume-rendering-with-a-kd-tree-decomposition/</guid><description>&lt;p>Let&amp;rsquo;s talk about the progress we&amp;rsquo;ve made on a kD-Tree decomposition.&lt;/p></description></item></channel></rss>